{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/omkar/webdev/om/new/airbnb-app/src/screens/SearchResultsMap/index.js\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\nimport CustomMarker from \"../../components/CustomMarker\";\nimport PostCarouselItem from \"../../components/PostCarouselItem\";\nimport places from \"../../../assets/data/feed\";\n\nvar SearchResultsMaps = function SearchResultsMaps() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedPlaceId = _useState2[0],\n      setSelectedPlaceId = _useState2[1];\n\n  var flatlist = useRef();\n  var map = useRef();\n  var viewConfig = useRef({\n    itemVisiblePercentThreshold: 70\n  });\n  var onViewChanged = useRef(function (_ref) {\n    var viewableItems = _ref.viewableItems;\n\n    if (viewableItems.length > 0) {\n      var selectedPlace = viewableItems[0].item;\n      setSelectedPlaceId(selectedPlace.id);\n    }\n  });\n  var width = useWindowDimensions().width;\n  useEffect(function () {\n    if (!selectedPlaceId || !flatlist) {\n      return;\n    }\n\n    var index = places.findIndex(function (place) {\n      return place.id === selectedPlaceId;\n    });\n    flatlist.current.scrollToIndex({\n      index: index\n    });\n    var selectedPlace = places[index];\n    var region = {\n      latitude: selectedPlace.coordinate.latitude,\n      longitude: selectedPlace.coordinate.longitude,\n      latitudeDelta: 0.8,\n      longitudeDelta: 0.8\n    };\n    map.current.animateToRegion(region);\n  }, [selectedPlaceId]);\n  return React.createElement(View, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    ref: map,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    provider: PROVIDER_GOOGLE,\n    initialRegion: {\n      latitude: 19.614689823532405,\n      longitude: 74.66240668290855,\n      latitudeDelta: 0.8,\n      longitudeDelta: 0.8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, places.map(function (place) {\n    return React.createElement(CustomMarker, {\n      coordinate: {\n        latitude: place.coordinate.latitude,\n        longitude: place.coordinate.longitude\n      },\n      price: place.newPrice,\n      isSelected: place.id === selectedPlaceId,\n      onPress: function onPress() {\n        return setSelectedPlaceId(place.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      bottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    ref: flatlist,\n    data: places,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(PostCarouselItem, {\n        post: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      });\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    snapToInterval: width - 60,\n    snapToAlignment: \"center\",\n    decelerationRate: \"fast\",\n    viewabilityConfig: viewConfig.current,\n    onViewableItemsChanged: onViewChanged.current,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SearchResultsMaps;","map":{"version":3,"sources":["/home/omkar/webdev/om/new/airbnb-app/src/screens/SearchResultsMap/index.js"],"names":["React","useState","useEffect","useRef","MapView","Marker","PROVIDER_GOOGLE","CustomMarker","PostCarouselItem","places","SearchResultsMaps","selectedPlaceId","setSelectedPlaceId","flatlist","map","viewConfig","itemVisiblePercentThreshold","onViewChanged","viewableItems","length","selectedPlace","item","id","width","useWindowDimensions","index","findIndex","place","current","scrollToIndex","region","latitude","coordinate","longitude","latitudeDelta","longitudeDelta","animateToRegion","height","newPrice","position","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { View, FlatList, useWindowDimensions } from \"react-native\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\nimport CustomMarker from \"../../components/CustomMarker\";\nimport PostCarouselItem from \"../../components/PostCarouselItem\";\nimport places from \"../../../assets/data/feed\";\n\nconst SearchResultsMaps = () => {\n  const [selectedPlaceId, setSelectedPlaceId] = useState(null);\n\n  const flatlist = useRef();\n  const map = useRef();\n\n  const viewConfig = useRef({ itemVisiblePercentThreshold: 70 });\n  const onViewChanged = useRef(({ viewableItems }) => {\n    if (viewableItems.length > 0) {\n      const selectedPlace = viewableItems[0].item;\n      setSelectedPlaceId(selectedPlace.id);\n    }\n  });\n\n  const width = useWindowDimensions().width;\n\n  useEffect(() => {\n    if (!selectedPlaceId || !flatlist) {\n      return;\n    }\n    const index = places.findIndex((place) => place.id === selectedPlaceId);\n    flatlist.current.scrollToIndex({ index });\n\n    const selectedPlace = places[index];\n    const region = {\n      latitude: selectedPlace.coordinate.latitude,\n      longitude: selectedPlace.coordinate.longitude,\n      latitudeDelta: 0.8,\n      longitudeDelta: 0.8,\n    };\n    map.current.animateToRegion(region);\n  }, [selectedPlaceId]);\n\n  return (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n      <MapView\n        ref={map}\n        style={{ width: \"100%\", height: \"100%\" }}\n        provider={PROVIDER_GOOGLE}\n        initialRegion={{\n          latitude: 19.614689823532405,\n          longitude: 74.66240668290855,\n          latitudeDelta: 0.8,\n          longitudeDelta: 0.8,\n        }}\n      >\n        {places.map((place) => (\n          <CustomMarker\n            coordinate={{\n              latitude: place.coordinate.latitude,\n              longitude: place.coordinate.longitude,\n            }}\n            price={place.newPrice}\n            isSelected={place.id === selectedPlaceId}\n            onPress={() => setSelectedPlaceId(place.id)}\n          />\n        ))}\n      </MapView>\n\n      <View style={{ position: \"absolute\", bottom: 10 }}>\n        <FlatList\n          ref={flatlist}\n          data={places}\n          renderItem={({ item }) => <PostCarouselItem post={item} />}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          snapToInterval={width - 60}\n          snapToAlignment={\"center\"}\n          decelerationRate={\"fast\"}\n          viewabilityConfig={viewConfig.current}\n          onViewableItemsChanged={onViewChanged.current}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default SearchResultsMaps;\n"]},"metadata":{},"sourceType":"module"}